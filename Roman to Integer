problem：
Given a roman numeral, convert it to an integer.

Input is guaranteed to be within the range from 1 to 3999.
------------------------------------------------------------

solution：
int charToInt(char c)
{
  switch(c)
	{
		case 'I':
			return 1;
		case 'V':
			return 5;
		case 'X':
			return 10;
		case 'L':
			return 50;
		case 'C':
			return 100;
		case 'D':
			return 500;
		case 'M':
			return 1000;
		default:
			return 0;
	}
}

int romanToInt(string s)
{
	if(s == "")
		return 0;
	int result = 0;
	for(int i = 0; i < s.length(); i++)
	{
		if(i + 1 < s.length())
		{
			if(charToInt(s[i]) < charToInt(s[i + 1]))
				result -= charToInt(s[i]);
			else
				result += charToInt(s[i]);
		}
		else
			result += charToInt(s[i]);
	}
	return result;
}
