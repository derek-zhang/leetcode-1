//Definition for singly-linked list.
struct ListNode {
       int val;
	     ListNode *next;
	     ListNode(int x) : val(x), next(NULL) {}
	 };
//快慢指针的使用，重点在于注意特殊情况和边界条件
//需考虑删除的是头结点、尾结点(此题归纳到else情况下)、普通结点的情况
ListNode *removeNthFromEnd(ListNode *head, int n)
{
	if(head == NULL)
		return NULL;
	ListNode *slow, *fast, *pre;
	slow = fast = head;
	pre = NULL;
	for(int i = 0; i < n-1; i++)
			fast = fast->next;
	while(fast->next != NULL)
	{
		pre = slow;
		slow = slow->next;
		fast = fast->next;
	}
	if(pre == NULL)
	{
		head = slow->next;
	}
	else
	{
		pre->next = slow->next;
	}
	delete slow;
	slow = NULL;
	return head;
}
