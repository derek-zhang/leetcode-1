problem：
You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Follow up:
Could you do this in-place?
----------------------------------------------
solution：
//寻找规律的矩阵操作
void rotate(vector<vector<int> > &matrix)
{
  int height = matrix.size();
	if(height == 0)
		return;
	int width = matrix[0].size();
	if(width == 0 || width != height)
		return;

	for(int layer = 0; layer < height / 2; layer++)
	{
		int first = layer;
		int last = height - 1 - layer;
		for(int i = first; i < last; i++)
		{
			int offset = i - first;
			int top = matrix[first][i];
			matrix[first][i] = matrix[last - offset][first];
			matrix[last - offset][first] = matrix[last][last - offset];
			matrix[last][last - offset] = matrix[i][last];
			matrix[i][last] = top;

		}
	}
}
