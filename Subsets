//这题是(n,k)问题的延伸，也就是从n个元素集合中选取k个元素，有多少种不同的选法。只要把k从0循环到n即可。
//对于(n, k)问题，不停地选取集合n中的元素，直到个数为k，然后开始回溯，去掉k中的第一个元素，再纳入n中的下一个元素，依次类推不断回溯，直到遍历所有的可能性。
void subsets_aux(vector<vector<int> > &ret, vector<int> &tmp, vector<int> &S,  int n, int k, int index)
{
  if(k == 0)
	{
		if(find(ret.begin(), ret.end(), tmp) == ret.end())
			ret.push_back(tmp);
	}
	else if(k > 0 && index < n)
	{
		tmp.push_back(S[index]);
		subsets_aux(ret, tmp, S, n, k - 1, index + 1);

		tmp.pop_back();
		subsets_aux(ret, tmp, S, n, k, index + 1);
	}
}

vector<vector<int> > subsets(vector<int> &S)
{
	sort(S.begin(), S.end());
	int n = S.size();
	vector<vector<int> > ret;
	vector<int> tmp;
	if(n == 0)
	{
		ret.push_back(tmp);
		return ret;
	}
	for(int i = 0; i <= n; ++i)
		subsets_aux(ret, tmp, S, n, i, 0);
	return ret;
}
