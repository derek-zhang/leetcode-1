struct TreeNode {
  int val;
	TreeNode *left;
	TreeNode *right;
	TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

bool isSymmetric_aux(TreeNode *node1, TreeNode *node2)
{
	if(node1== NULL && node2 == NULL)
		return true;
	if(node1 == NULL || node2 == NULL)
		return false;
	return node1->val == node2->val && isSymmetric_aux(node1->left, node2->right) && isSymmetric_aux(node1->right, node2->left);
}

bool isSymmetric(TreeNode *root)
{
	if(root == NULL)
		return true;
	return isSymmetric_aux(root->left, root->right);
}
